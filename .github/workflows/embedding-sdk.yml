name: Embedding SDK

on:
  push:
    branches:
      - "master"
      - "release-**"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  files-changed:
    name: Check which files changed
    runs-on: ubuntu-22.04
    timeout-minutes: 3
    outputs:
      documentation: ${{ steps.changes.outputs.documentation }}
      frontend_embedding_sdk_sources: ${{ steps.changes.outputs.frontend_embedding_sdk_sources }}
      e2e_all: ${{ steps.changes.outputs.e2e_all }}
    steps:
      - uses: actions/checkout@v4
      - name: Test which files changed
        uses: dorny/paths-filter@v3.0.0
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-paths.yaml

  # if this is a test on a release branch, we need to check the build requirements
  get-build-requirements:
    if: |
      !cancelled() &&
      contains(github.ref, 'release-x')
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    outputs:
      java_version: ${{ fromJson(steps.dependencies.outputs.result).java_version }}
      node_version: ${{ fromJson(steps.dependencies.outputs.result).node_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: release
      - name: Prepare build scripts
        run: cd ${{ github.workspace }}/release && yarn && yarn build
      - name: Get build dependencies
        uses: actions/github-script@v7
        id: dependencies
        with:
          script: | # js
            const { getBuildRequirements, getVersionFromReleaseBranch } = require('${{ github.workspace }}/release/dist/index.cjs');

            const version = getVersionFromReleaseBranch('${{ github.ref }}');
            const requirements = getBuildRequirements(version);

            return {
              java_version: requirements.java,
              node_version: requirements.node,
            };

  # Build uberjar only if it's needed and hasn't been built in another workflow
  build-uberjar:
    needs: [files-changed, get-build-requirements]
    if: |
      !cancelled() &&
      needs.files-changed.outputs.e2e_all == 'true'
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      matrix:
        edition: [ee]
    env:
      MB_EDITION: ${{ matrix.edition }}
      INTERACTIVE: false
      SKIP_LICENSES: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
        with:
          node-version: "${{ needs.get-build-requirements.outputs.node_version }}"
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: uberjar
          java-version: "${{ needs.get-build-requirements.outputs.java_version || 21 }}"

      - name: Check if uberjar already exists
        id: check_uberjar
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const artifactName = `metabase-ee-${{ github.event.pull_request.head.sha || github.sha }}-uberjar`;
              const response = await github.rest.actions.listArtifactsForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: artifactName,
                per_page: 1
              });
              
              if (response.data.total_count > 0) {
                console.log(`Artifact ${artifactName} already exists.`);
                return true;
              }
              return false;
            } catch (error) {
              console.error('Error checking for artifact:', error);
              return false;
            }

      - name: Build uberjar with ./bin/build.sh
        if: steps.check_uberjar.outputs.result != 'true'
        timeout-minutes: 10
        run:  ./bin/build.sh
        shell: bash

      - name: Prepare uberjar artifact
        if: steps.check_uberjar.outputs.result != 'true'
        uses: ./.github/actions/prepare-uberjar-artifact
        with:
          name: metabase-${{ matrix.edition }}-${{ github.event.pull_request.head.sha || github.sha }}-uberjar

  build-sdk:
    needs: [files-changed]
    if: |
      !cancelled() &&
      (needs.files-changed.outputs.frontend_embedding_sdk_sources == 'true' ||
      needs.files-changed.outputs.documentation == 'true')
    runs-on: ubuntu-22.04
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: "cljs"
      - name: Build Embedding SDK package
        run: yarn build-embedding-sdk
      - name: Prepare Embedding SDK artifact
        uses: actions/upload-artifact@v4
        with:
          name: embedding-sdk-${{ github.event.pull_request.head.sha || github.sha }}
          path: resources/embedding-sdk

  embedding-sdk-cli-snippets-type-check:
    needs: [files-changed, build-sdk]
    if: |
      needs.files-changed.outputs.frontend_embedding_sdk_sources == 'true' &&
      needs.build-sdk.result == 'success'
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Retrieve Embedding SDK dist artifact
        uses: actions/download-artifact@v4
        with:
          name: embedding-sdk-${{ github.event.pull_request.head.sha || github.sha }}
          path: ${{ github.workspace }}/resources/embedding-sdk
      - name: Run frontend embedding SDK snippets type check
        run: yarn run embedding-sdk:cli-snippets:type-check

  embedding-sdk-docs-snippets-type-check:
    needs: [files-changed, build-sdk]
    if: |
      needs.files-changed.outputs.documentation == 'true' &&
      needs.build-sdk.result == 'success'
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Retrieve Embedding SDK dist artifact
        uses: actions/download-artifact@v4
        with:
          name: embedding-sdk-${{ github.event.pull_request.head.sha || github.sha }}
          path: ${{ github.workspace }}/resources/embedding-sdk
      - name: Run frontend embedding SDK snippets type check
        run: yarn run embedding-sdk:docs-snippets:type-check

  sdk-e2e-tests:
    uses: ./.github/workflows/e2e-component-tests-embedding-sdk.yml
    needs: [build-sdk, build-uberjar]
    secrets: inherit
    with:
      cached-embedding-sdk-dist-artifact-name: embedding-sdk-${{ github.event.pull_request.head.sha || github.sha }}
      uberjar_built: true

  e2e-component-tests-embedding-sdk-cross-version:
    if: ${{ startsWith(inputs.branch, 'release-x.') }}
    uses: ./.github/workflows/e2e-component-tests-embedding-sdk-cross-version.yml
    secrets: inherit

  cross-version-for-breaking-changes:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/e2e-cross-version-for-breaking-changes.yml
    secrets: inherit
    with:
      fe-ref: ${{ github.base_ref }}
      be-ref: ${{ github.head_ref }}

  embedding-sdk-tests-result:
    needs:
      - embedding-sdk-cli-snippets-type-check
      - embedding-sdk-docs-snippets-type-check
      - sdk-e2e-tests
      - e2e-component-tests-embedding-sdk-cross-version
    if: always() && !cancelled()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      needs: ${{ toJson(needs) }}
    steps:
      - name: Check embedding SDK job status
        uses: actions/github-script@v7
        env:
          needs: ${{ toJson(needs) }}
        with:
          script: | # js
            const needs = JSON.parse(process.env.needs);
            const jobs = Object.entries(needs).map(
              ([jobName, jobValues]) => ({
                name: jobName,
                result: jobValues.result
              }));

            // are all jobs skipped or successful?
            if (jobs.every(job => (job.result === 'skipped' || job.result === 'success'))) {
              console.log('All jobs are skipped or successful');
              process.exit(0);
            }

            // otherwise, something failed
            console.log('Some embedding SDK jobs failed');
            jobs.forEach((job) => {
              if (job.result !== 'success') {
                console.log(`${job.name} - ${job.result}`);
              }
            });
            process.exit(1);